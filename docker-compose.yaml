services:
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: social_network
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d social_network -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  userservice:
    build: ./userService
    container_name: user-service
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy

  postservice:
    build:
      context: .
      dockerfile: postService/Dockerfile
    volumes:
      - ./proto:/app/proto:ro
    ports:
      - "50051:50051"
    # environment:
    #   - PYTHONPATH=/app/postService:/app/proto
    depends_on:
      db:
        condition: service_healthy
  
  apigateway:
    build:
      context: .
      dockerfile: apiGateway/Dockerfile
    container_name: api-gateway
    # volumes:
    #   - ./proto:/app/proto:ro 
    ports:
      - "8000:8000"
    depends_on:
      - userservice

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

volumes:
  postgres_data: