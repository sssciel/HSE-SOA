openapi: 3.1.0
info:
  title: UserService
  version: 1.0.0
paths:
  /:
    get:
      summary: Home Page
      operationId: home_page__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /auth/listall:
    get:
      tags:
      - Auth
      summary: Вывести всех пользователей
      operationId: list_all_auth_listall_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserResponse'
                type: array
                title: Response List All Auth Listall Get
  /auth/{id}:
    get:
      tags:
      - Auth
      summary: Получить одного пользователя
      operationId: get_user_auth__id__get
      parameters:
      - name: userID
        in: query
        required: true
        schema:
          type: integer
          title: Userid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/register/:
    post:
      tags:
      - Auth
      summary: Reg User
      operationId: reg_user_auth_register__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userRegistration'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/login/:
    post:
      tags:
      - Auth
      summary: Auth User
      operationId: auth_user_auth_login__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/me/:
    get:
      tags:
      - Auth
      summary: Get Me
      operationId: get_me_auth_me__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /auth/logout/:
    post:
      tags:
      - Auth
      summary: Logout User
      operationId: logout_user_auth_logout__post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /auth/update_profile/:
    post:
      tags:
      - Auth
      summary: Update Profile
      operationId: update_profile_auth_update_profile__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /role/add:
    post:
      tags:
      - Roles
      summary: Add new role
      operationId: add_new_role_role_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAddRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /role/delete/{role_name}:
    post:
      tags:
      - Roles
      summary: Delete a role
      operationId: delete_role_role_delete__role_name__post
      parameters:
      - name: role_name
        in: path
        required: true
        schema:
          type: string
          title: Role Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /role/{role_name}:
    post:
      tags:
      - Roles
      summary: List role's information
      operationId: delete_role_role__role_name__post
      parameters:
      - name: role_name
        in: path
        required: true
        schema:
          type: string
          title: Role Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAddRequest'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AccessLevel:
      type: integer
      enum:
      - 0
      - 1
      - 2
      title: AccessLevel
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ProfileUpdateRequest:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        birth_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Birth Date
        phone_number:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone Number
      type: object
      title: ProfileUpdateRequest
    RoleAddRequest:
      properties:
        name:
          type: string
          title: Name
          description: Название роли
        color:
          type: string
          title: Color
          description: Цвет роли в формате '(r, g, b)'
        access:
          $ref: '#/components/schemas/AccessLevel'
          description: Уровень доступа
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Описание роли
      type: object
      required:
      - name
      - color
      - access
      - description
      title: RoleAddRequest
    UserResponse:
      properties:
        id:
          type: integer
          title: Id
        username:
          type: string
          title: Username
        email:
          type: string
          title: Email
        hashed_password:
          type: string
          title: Hashed Password
        profile_id:
          type: integer
          title: Profile Id
        profile:
          type: object
          title: Profile
      type: object
      required:
      - id
      - username
      - email
      - hashed_password
      - profile_id
      - profile
      title: UserResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    userLogin:
      properties:
        username:
          type: string
          maxLength: 30
          minLength: 1
          title: Username
          description: User's login
        password:
          type: string
          maxLength: 30
          minLength: 1
          title: Password
          description: User's password
      type: object
      required:
      - username
      - password
      title: userLogin
    userRegistration:
      properties:
        username:
          type: string
          maxLength: 30
          minLength: 1
          title: Username
          description: User's login
        password:
          type: string
          maxLength: 30
          minLength: 1
          title: Password
          description: User's password
        email:
          type: string
          format: email
          title: Email
          description: User's email
      type: object
      required:
      - username
      - password
      - email
      title: userRegistration
